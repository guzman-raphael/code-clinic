# docker-compose -f LNX-docker-compose.yml --env-file LNX.env pull
# docker-compose -f LNX-docker-compose.yml --env-file LNX.env up --build --exit-code-from dj-mat
# docker-compose -f LNX-docker-compose.yml down
version: '2.4'
x-net: &net
  networks:
      - main
services:
  dj:
    <<: *net
    image: datajoint/pydev:$DJ_TAG
    # image: datajoint/pydev:3.7-alpine3.9
    depends_on:
      mysql:
        condition: service_healthy 
      minio:
        condition: service_healthy 
    environment:
      - DJ_HOST=mysql
      # - DJ_HOST=10.250.13.240
      - DJ_USER=root
      - DJ_PASS=simple

      - DJ_TEST_HOST=mysql
      # - DJ_TEST_HOST=10.250.13.240
      - DJ_TEST_USER=datajoint
      - DJ_TEST_PASSWORD=datajoint

      - S3_ENDPOINT=minio:9000
      - S3_ACCESS_KEY=datajoint
      - S3_SECRET_KEY=datajoint
      - S3_BUCKET=datajoint-test

      - PYTHONDONTWRITEBYTECODE=nothing
      - DISPLAY
    working_dir: /src
    # command: >
    #  "pip install --user .;
    #   jupyter notebook;"
    # command: --version
    command: > 
      /bin/sh -c
       "pip install --user . nose nose-cov;
        pip freeze | grep datajoint;
        nosetests -vsw tests --with-coverage --cover-package=datajoint;"
    # curl -s --unix-socket /docker/docker.sock http://docker/containers/d8613b349010/json | jq .State.Health.Status
    ports:
      - "8888:8888"
    volumes:
      - .:/src
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    #   - /var/run/docker.sock:/docker/docker.sock

  dj-mat:
    <<: *net
    image: datajoint/matdev:R2018b-slim9.9
    depends_on:
      mysql:
        condition: service_healthy 
      # minio:
      #   condition: service_healthy 
    environment:
      - DJ_TEST_HOST=mysql
      - DJ_TEST_USER=root
      - DJ_TEST_PASSWORD=simple
      - DISPLAY
    working_dir: /src
    # command: > 
    #   /bin/bash -c
    #    "matlab -nodisplay -nosplash -nodesktop -r \"run('/src/mymSetup.m');exit;\"";
    command: > 
      /bin/bash -c
       "tail -f /dev/null
        "
    #  "rm -R build;rm -R distribution;matlab -nodisplay -nosplash -nodesktop -r \"run('/src/mex_compilation/compile_linux.m');disp('----');run('/src/mymSetup.m');exit;\";
    ports:
      - "8888:8888"
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /github/raphael/mym:/home/muser/mym
      - ~/Downloads/mysql-source-6:/tmp/mysqlc
      - /github/dj/m/datajoint-matlab:/src
    mac_address: 02:42:c0:a8:70:02

  mysql:
    <<: *net
    build:
      context: /github/dj/mysql-docker/slim9.9
    image: datajoint/mysql:$MYSQL_TAG
    environment:
      - MYSQL_ROOT_PASSWORD=simple
    # ports:
    #   - "3306:3306"
    # volumes:
    #   - ./mysql/data:/var/lib/mysql
    # command: mysqld --secure-file-priv=NULL
    # healthcheck:
    #   test: mysql --protocol TCP -u"root" -p"$$MYSQL_ROOT_PASSWORD" -e "show databases;"
    #   timeout: 20s
    #   retries: 10

  # minio:
  #   <<: *net
  #   environment:
  #     - MINIO_ACCESS_KEY=datajoint
  #     - MINIO_SECRET_KEY=datajoint
  #   image: raphaelguzman/minio:$MINIO_TAG
  #   # ports:
  #   #   - "9000:9000"
  #   # volumes:
  #   #   - ./minio/config:/root/.minio
  #   #   - ./minio/data:/data
  #   command: server /data
  #   healthcheck:
  #     test: /usr/bin/healthcheck
  #     # test: exit 1
  #     timeout: 20s
  #     retries: 10

  # createbuckets:
    # <<: *net
  #   environment:
  #     - S3_ACCESS_KEY=datajoint
  #     - S3_SECRET_KEY=datajoint
  #     - S3_BUCKET=datajoint-test
  #   image: raphaelguzman/minio-mc:$MC_TAG
  #   depends_on:
  #     minio:
  #       condition: service_healthy 
  #   entrypoint: /bin/sh
  #   command: -c "mc config host add dj-s3 http://minio:9000 $$S3_ACCESS_KEY $$S3_SECRET_KEY;mc mb $$S3_BUCKET;mc policy download $$S3_BUCKET;tail -f /dev/null"

networks:
  main:
    ipam:
      config:
        - subnet: "172.168.1.5/24"
